// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateNewsArticleRequest update news article request
//
// swagger:model updateNewsArticleRequest
type UpdateNewsArticleRequest struct {

	// ID of the category the news article belongs to
	// Example: 2
	CategoryID int64 `json:"category_id,omitempty"`

	// content
	// Required: true
	Content *string `json:"content"`

	// Title of the news article
	// Example: Breaking News Title
	// Required: true
	// Max Length: 255
	Title *string `json:"title"`
}

// Validate validates this update news article request
func (m *UpdateNewsArticleRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateNewsArticleRequest) validateContent(formats strfmt.Registry) error {

	if err := validate.Required("content", "body", m.Content); err != nil {
		return err
	}

	return nil
}

func (m *UpdateNewsArticleRequest) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	if err := validate.MaxLength("title", "body", *m.Title, 255); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update news article request based on context it is used
func (m *UpdateNewsArticleRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateNewsArticleRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateNewsArticleRequest) UnmarshalBinary(b []byte) error {
	var res UpdateNewsArticleRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
