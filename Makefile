### -----------------------
# --- Building
### -----------------------

build:
	@$(MAKE) build-pre
	@$(MAKE) build-app

all: init
	@$(MAKE) build

build-pre: sql swagger

build-app:
	go build -o bin/app.exe main.go

build-rsdev:
	go build -tags scripts -o bin/rsdev.exe scripts/main.go

### -----------------------
# --- Initializing
### -----------------------

init: 
	@$(MAKE) modules
	@$(MAKE) tidy
	@$(MAKE) vendor

modules: 
	go mod download

tidy: 
	go mod tidy

vendor:
	go mod vendor

### -----------------------
# --- SQL
### -----------------------

go-test:
	gotestsum --format pkgname-and-test-fails --format-hide-empty-pkg

sql-reset: 
	@echo "DROP & CREATE database:"
	@echo "  PGHOST=${PGHOST} PGDATABASE=${PGDATABASE}" PGUSER=${PGUSER}
	@echo -n "Are you sure? [y/N] " && read ans && [ $${ans:-N} = y ]
	psql -d postgres -c 'DROP DATABASE IF EXISTS "${PGDATABASE}";'
	psql -d postgres -c 'CREATE DATABASE "${PGDATABASE}" WITH OWNER ${PGUSER} TEMPLATE "template0";'

sql-drop-all: 
	@echo "DROP ALL:"
	TO_DROP=$$(psql -qtz0 -d postgres -c "SELECT 'DROP DATABASE \"' || datname || '\";' FROM pg_database WHERE datistemplate = FALSE AND datname != 'postgres';")
	@echo "$$TO_DROP"
	@echo -n "Are you sure? [y/N] " && read ans && [ $${ans:-N} = y ]
	@echo "Resetting integresql..."
	curl --fail -X DELETE http://integresql:5000/api/v1/admin/templates
	@echo "Drop databases..."
	echo $$TO_DROP | psql -tz0 -d postgres
	@echo "Done. Please run 'make sql-reset && make sql-spec-reset && make sql-spec-migrate' to reinitialize."

sql: 
	@$(MAKE) sql-generate
	@$(MAKE) sql-migrate

sql-generate: 
	@echo "Running sqlc generate"
	sqlc generate
	
sql-migrate: 
	@echo "Running goose migrations"
	cd sql/schema && goose postgres "${DB_URL}" up

sql-spec-reset: 
	@echo "make sql-spec-reset"
	@psql --quiet -d postgres -c 'DROP DATABASE IF EXISTS "${PSQL_DBNAME}";'
	@psql --quiet -d postgres -c 'CREATE DATABASE "${PSQL_DBNAME}" WITH OWNER ${PSQL_USER} TEMPLATE "template0";'

### -----------------------
# --- Swagger
### -----------------------

swagger: 
	@$(MAKE) swagger-concat
	@$(MAKE) swagger-server

# https://goswagger.io/usage/mixin.html
# https://goswagger.io/usage/flatten.html
swagger-concat: 
	@echo "make swagger-concat"
	@mkdir -p api/tmp
	@rm -rf api/tmp/*
	@swagger mixin  --output=api/tmp/tmp.yml  --format=yaml  --keep-spec-order  api/config/main.yml api/paths/*  -q
	@swagger flatten api/tmp/tmp.yml  --output=api/swagger.yml  --format=yaml  -q
	@sed -i '1s@^@# // Code generated by "make swagger"; DO NOT EDIT.\n@' api/swagger.yml

swagger-server: swagger-generate swagger-validate 

swagger-generate:
	@echo "make swagger-generate"
	@rm -rf internal/types
	@mkdir -p internal/types
	@swagger generate server --allow-template-override  --template-dir=api/templates  --spec=api/swagger.yml  --server-package=internal/types  --model-package=internal/types  --exclude-main  --skip-validation --config-file=api/config/go-swagger-config.yml -q

swagger-serve:
	@echo "Serving Swagger API documentation..."
	swagger serve api/swagger.yml

swagger-validate: 
	@echo "make swagger-validate"
	@swagger validate --skip-warnings --stop-on-error -q api/swagger.yml
