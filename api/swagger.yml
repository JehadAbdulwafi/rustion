# // Code generated by "make swagger"; DO NOT EDIT.
consumes:
    - application/json
produces:
    - application/json
swagger: "2.0"
info:
    description: API documentation
    title: github.com/JehadAbdulwafi/rustion
    version: 0.1.0
paths:
    /api/v1/auth/login:
        post:
            description: Returns an access and refresh token on successful authentication
            operationId: PostLoginRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/postLoginPayload'
            responses:
                "200":
                    description: PostLoginResponse
                    schema:
                        $ref: '#/definitions/postLoginResponse'
                "400":
                    description: PublicHTTPValidationError
                    schema:
                        $ref: '#/definitions/publicHttpValidationError'
                "401":
                    description: PublicHTTPError
                    schema:
                        $ref: '#/definitions/publicHttpError'
                "403":
                    description: PublicHTTPError, type `USER_DEACTIVATED`
                    schema:
                        $ref: '#/definitions/publicHttpError'
            summary: Login with local user
            tags:
                - auth
    /api/v1/auth/register:
        post:
            description: Returns an access and refresh token on successful registration
            operationId: PostRegisterRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/postRegisterPayload'
            responses:
                "200":
                    description: PostLoginResponse
                    schema:
                        $ref: '#/definitions/postLoginResponse'
                "400":
                    description: PublicHTTPValidationError, type `INVALID_PASSWORD`
                    schema:
                        $ref: '#/definitions/publicHttpValidationError'
                "409":
                    description: PublicHTTPError, type `USER_ALREADY_EXISTS`
                    schema:
                        $ref: '#/definitions/publicHttpError'
            summary: Registers a local user
            tags:
                - auth
definitions:
    httpValidationErrorDetail:
        properties:
            error:
                description: Error describing field validation failure
                type: string
            in:
                description: Indicates how the invalid field was provided
                type: string
            key:
                description: Key of field failing validation
                type: string
        required:
            - key
            - in
            - error
        type: object
    orderDir:
        enum:
            - asc
            - desc
        type: string
    postLoginPayload:
        properties:
            email:
                description: Email of user to authenticate as
                example: user@example.com
                format: email
                maxLength: !!float 255
                minLength: !!float 1
                type: string
            password:
                description: Password of user to authenticate as
                example: correct horse battery staple
                maxLength: !!float 255
                minLength: !!float 1
                type: string
        required:
            - email
            - password
        type: object
    postLoginResponse:
        properties:
            access_token:
                description: Access token required for accessing protected API endpoints
                example: eyJhdWQiOiJjdXN0b2...
                type: string
            refresh_token:
                description: Refresh token for refreshing the access token once it expires
                example: eyJhdWQiOiJjdXN0b2...
                type: string
        required:
            - access_token
            - refresh_token
        type: object
    postRegisterPayload:
        properties:
            email:
                description: Email to register with
                example: user@example.com
                format: email
                maxLength: !!float 255
                minLength: !!float 1
                type: string
            name:
                description: Name to register with
                example: John Doe
                maxLength: !!float 255
                minLength: !!float 1
                type: string
            password:
                description: Password to register with
                example: correct horse battery staple
                maxLength: !!float 255
                minLength: !!float 1
                type: string
        required:
            - name
            - email
            - password
        type: object
    publicHttpError:
        properties:
            detail:
                description: More detailed, human-readable, optional explanation of the error
                example: User is lacking permission to access this resource
                type: string
            status:
                description: HTTP status code returned for the error
                example: !!float 403
                format: int64
                maximum: !!float 599
                minimum: !!float 100
                type: integer
                x-go-name: Code
            title:
                description: Short, human-readable description of the error
                example: Forbidden
                type: string
            type:
                description: Type of error returned, should be used for client-side error handling
                example: generic
                type: string
        required:
            - status
            - type
            - title
        type: object
    publicHttpValidationError:
        allOf:
            - $ref: '#/definitions/publicHttpError'
        properties:
            validationErrors:
                description: List of errors received while validating payload against schema
                items:
                    $ref: '#/definitions/httpValidationErrorDetail'
                type: array
        required:
            - validationErrors
        type: object
responses:
    AuthForbiddenResponse:
        description: PublicHTTPError, type `USER_DEACTIVATED`/`NOT_LOCAL_USER`
        schema:
            $ref: '#/definitions/publicHttpError'
    AuthUnauthorizedResponse:
        description: PublicHTTPError
        schema:
            $ref: '#/definitions/publicHttpError'
    InvalidPasswordResponse:
        description: PublicHTTPValidationError, type `INVALID_PASSWORD`
        schema:
            $ref: '#/definitions/publicHttpValidationError'
    ValidationError:
        description: PublicHTTPValidationError
        schema:
            $ref: '#/definitions/publicHttpValidationError'
securityDefinitions:
    Bearer:
        description: |-
            Access token for application access, **must** include "Bearer " prefix.
            Example: `Bearer b4a94a42-3ea2-4af3-9699-8bcbfee6e6d2`
        in: header
        name: Authorization
        type: apiKey
        x-keyPrefix: 'Bearer '
