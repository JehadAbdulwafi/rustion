# // Code generated by "make swagger"; DO NOT EDIT.
consumes:
    - application/json
produces:
    - application/json
swagger: "2.0"
info:
    description: API documentation
    title: github.com/JehadAbdulwafi/rustion
    version: 0.1.0
paths:
    /api/v1/articles:
        get:
            description: Retrieves all articles
            operationId: GetAllArticles
            responses:
                "200":
                    description: List of articles
                    schema:
                        $ref: '#/definitions/getArticlesResponse'
            summary: Gets all articles
            tags:
                - articles
        post:
            description: Creates a article
            operationId: PostCreateArticle
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/createArticleRequest'
            responses:
                "200":
                    description: CreateArticleResponse
                    schema:
                        $ref: '#/definitions/createArticleResponse'
            summary: Creates a article
            tags:
                - articles
    /api/v1/articles/{id}:
        delete:
            description: Deletes a article by ID
            operationId: DeleteArticle
            parameters:
                - description: ID of the article
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: DeleteArticleResponse
                    schema:
                        $ref: '#/definitions/deleteArticleResponse'
            summary: Deletes a article
            tags:
                - articles
        get:
            description: Retrieves a article by ID
            operationId: GetArticle
            parameters:
                - description: ID of the article
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: GetArticleResponse
                    schema:
                        $ref: '#/definitions/getArticleResponse'
            summary: Gets a article
            tags:
                - articles
        put:
            description: Updates a article by ID
            operationId: UpdateArticle
            parameters:
                - description: ID of the article
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/updateArticleRequest'
            responses:
                "200":
                    description: UpdateArticleResponse
                    schema:
                        $ref: '#/definitions/updateArticleResponse'
            summary: Updates a article
            tags:
                - articles
    /api/v1/auth/login:
        post:
            description: Returns an access and refresh token on successful authentication
            operationId: PostLoginRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/postLoginPayload'
            responses:
                "200":
                    description: PostLoginResponse
                    schema:
                        $ref: '#/definitions/postLoginResponse'
                "400":
                    description: PublicHTTPValidationError
                    schema:
                        $ref: '#/definitions/publicHttpValidationError'
                "401":
                    description: PublicHTTPError
                    schema:
                        $ref: '#/definitions/publicHttpError'
                "403":
                    description: PublicHTTPError, type `USER_DEACTIVATED`
                    schema:
                        $ref: '#/definitions/publicHttpError'
            summary: Login with local user
            tags:
                - auth
    /api/v1/auth/register:
        post:
            description: Returns an access and refresh token on successful registration
            operationId: PostRegisterRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/postRegisterPayload'
            responses:
                "200":
                    description: PostLoginResponse
                    schema:
                        $ref: '#/definitions/postLoginResponse'
                "400":
                    description: PublicHTTPValidationError, type `INVALID_PASSWORD`
                    schema:
                        $ref: '#/definitions/publicHttpValidationError'
                "409":
                    description: PublicHTTPError, type `USER_ALREADY_EXISTS`
                    schema:
                        $ref: '#/definitions/publicHttpError'
            summary: Registers a local user
            tags:
                - auth
    /api/v1/auth/userinfo:
        get:
            description: |-
                Returns user information compatible with the OpenID Connect Core 1.0 specification.
                Information returned depends on the requesting user as some data is only available if an app user profile exists.
            operationId: GetUserInfoRoute
            responses:
                "200":
                    description: GetUserInfoResponse
                    schema:
                        $ref: '#/definitions/getUserInfoResponse'
            security:
                - Bearer: []
            summary: Get user info
            tags:
                - auth
    /api/v1/categories:
        get:
            description: Retrieves all categories with their associated articles
            operationId: GetCategories
            responses:
                "200":
                    description: List of categories
                    schema:
                        $ref: '#/definitions/getCategoriesResponse'
            summary: Gets all categories
            tags:
                - categories
        post:
            description: Creates a category
            operationId: PostCreateCategory
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/createCategoryRequest'
            responses:
                "200":
                    description: CreateCategoryResponse
                    schema:
                        $ref: '#/definitions/createCategoryResponse'
            summary: Creates a category
            tags:
                - categories
    /api/v1/categories/articles:
        get:
            description: Retrieves a category with its associated articles
            operationId: GetCategoryWithArticlesMixin2
            responses:
                "200":
                    description: GetCategoryWithArticlesResponse
                    schema:
                        $ref: '#/definitions/getCategoriesWithArticlesResponse'
            summary: Gets a category with articles
            tags:
                - categories
    /api/v1/categories/{id}:
        delete:
            description: Deletes a category by ID
            operationId: DeleteCategory
            parameters:
                - description: ID of the category
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: DeleteCategoryResponse
                    schema:
                        $ref: '#/definitions/deleteCategoryResponse'
            summary: Deletes a category
            tags:
                - news_categories
        get:
            description: Retrieves a category by ID
            operationId: GetCategory
            parameters:
                - description: ID of the category
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: GetCategoryResponse
                    schema:
                        $ref: '#/definitions/getCategoryResponse'
            summary: Gets a category
            tags:
                - news_categories
        put:
            description: Updates a category by ID
            operationId: UpdateCategory
            parameters:
                - description: ID of the category
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/updateCategoryRequest'
            responses:
                "200":
                    description: UpdateCategoryResponse
                    schema:
                        $ref: '#/definitions/updateCategoryResponse'
            summary: Updates a category
            tags:
                - news_categories
    /api/v1/categories/{id}/articles:
        get:
            description: Retrieves a category with its associated articles
            operationId: GetCategoryWithArticles
            parameters:
                - description: ID of the category
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: GetCategoryWithArticlesResponse
                    schema:
                        $ref: '#/definitions/getCategoryWithArticlesResponse'
            summary: Gets a category with articles
            tags:
                - categories
    /api/v1/featured-sections:
        get:
            description: Retrieves all featured sections with their associated articles
            operationId: GetAllFeaturedSectionsWithArticles
            responses:
                "200":
                    description: List of featured sections with articles
                    schema:
                        $ref: '#/definitions/getFeaturedSectionsResponse'
            summary: Gets all featured sections with articles
            tags:
                - featured_sections
        post:
            description: Creates a featured section
            operationId: PostCreateFeaturedSection
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/createFeaturedSectionRequest'
            responses:
                "200":
                    description: CreateFeaturedSectionResponse
                    schema:
                        $ref: '#/definitions/createFeaturedSectionResponse'
            summary: Creates a featured section
            tags:
                - featured_sections
    /api/v1/featured-sections/articles:
        get:
            description: Retrieves a featured sections with its associated articles
            operationId: GetFeaturedSectionsWithArticles
            responses:
                "200":
                    description: GetFeaturedSectionWithArticlesResponse
                    schema:
                        $ref: '#/definitions/getFeaturedSectionsWithArticlesResponse'
            summary: Gets a featured sections with articles
            tags:
                - featured_sections
    /api/v1/featured-sections/{id}:
        delete:
            description: Deletes a featured section by ID
            operationId: DeleteFeaturedSection
            parameters:
                - description: ID of the featured section
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: DeleteFeaturedSectionResponse
                    schema:
                        $ref: '#/definitions/deleteFeaturedSectionResponse'
            summary: Deletes a featured section
            tags:
                - featured_sections
        get:
            description: Retrieves a featured section by ID
            operationId: GetFeaturedSection
            parameters:
                - description: ID of the featured section
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: GetFeaturedSectionResponse
                    schema:
                        $ref: '#/definitions/getFeaturedSectionResponse'
            summary: Gets a featured section
            tags:
                - featured_sections
        put:
            description: Updates a featured section by ID
            operationId: UpdateFeaturedSection
            parameters:
                - description: ID of the featured section
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/updateFeaturedSectionRequest'
            responses:
                "200":
                    description: UpdateFeaturedSectionResponse
                    schema:
                        $ref: '#/definitions/updateFeaturedSectionResponse'
            summary: Updates a featured section
            tags:
                - featured_sections
    /api/v1/featured-sections/{id}/articles:
        get:
            description: Retrieves a featured section with its associated articles
            operationId: GetFeaturedSectionWithArticles
            parameters:
                - description: ID of the featured section
                  format: uuid4
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: GetFeaturedSectionWithArticlesResponse
                    schema:
                        $ref: '#/definitions/getFeaturedSectionWithArticlesResponse'
            summary: Gets a featured section with articles
            tags:
                - featured_sections
    /api/v1/healthy:
        get:
            description: |-
                This endpoint returns 200 when the service is healthy.
                Returns an human readable string about the current service status.
            operationId: GetHealthyRoute
            produces:
                - text/plain
            responses:
                "200":
                    description: Ready.
                "521":
                    description: Not ready.
            summary: Get healthy
            tags:
                - common
    /api/v1/push/test:
        get:
            deprecated: true
            description: Sends a test push message to the current user
            operationId: GetPushTestRoute
            responses:
                "200":
                    description: OK
            security:
                - Bearer: []
            summary: Send test push
            tags:
                - test
    /api/v1/push/token:
        put:
            description: |-
                Adds a push token for the given provider to the current user.
                If the oldToken is present it will be deleted.
                Currently only the provider 'fcm' is supported.
            operationId: PostUpdatePushTokenRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/postUpdatePushTokenPayload'
            responses:
                "200":
                    description: OK
                "404":
                    description: PublicHTTPError, type `OLD_PUSH_TOKEN_NOT_FOUND`
                    schema:
                        $ref: '#/definitions/publicHttpError'
                "409":
                    description: PublicHTTPError, type `PUSH_TOKEN_ALREADY_EXISTS`
                    schema:
                        $ref: '#/definitions/publicHttpError'
            security:
                - Bearer: []
            summary: Adds a push token to the user
            tags:
                - push
    /api/v1/streams:
        post:
            description: Creates a stream
            operationId: PostCreateStreamRoute
            responses:
                "200":
                    description: PostCreateStreamResponse
                    schema:
                        $ref: '#/definitions/createStreamResponse'
            summary: Creates a stream
            tags:
                - stream
    /api/v1/streams/play:
        post:
            description: Plays a stream
            operationId: PostPlayStreamRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/streamEvent'
            responses:
                "200":
                    description: PostPublishResponse
                    schema:
                        $ref: '#/definitions/streamEventResponse'
            summary: Plays a stream
            tags:
                - stream
    /api/v1/streams/publish:
        post:
            description: Publishes a stream
            operationId: PostPublishStreamRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/streamEvent'
            responses:
                "200":
                    description: PostPublishResponse
                    schema:
                        $ref: '#/definitions/streamEventResponse'
            summary: Publishes a stream
            tags:
                - stream
    /api/v1/streams/stop:
        post:
            description: Stops a stream
            operationId: PostStopStreamRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/streamEvent'
            responses:
                "200":
                    description: PostStopStreamResponse
                    schema:
                        $ref: '#/definitions/streamEventResponse'
            summary: Stops a stream
            tags:
                - stream
    /api/v1/streams/unpublish:
        post:
            description: Unpublishes a stream
            operationId: PostUnpublishStreamRoute
            parameters:
                - in: body
                  name: Payload
                  schema:
                    $ref: '#/definitions/streamEvent'
            responses:
                "200":
                    description: PostUnpublishResponse
                    schema:
                        $ref: '#/definitions/streamEventResponse'
            summary: Unpublishes a stream
            tags:
                - stream
    /api/v1/version:
        get:
            description: This endpoint returns the module name, commit and build-date baked into the app binary.
            operationId: GetVersionRoute
            produces:
                - text/plain
            responses:
                "200":
                    description: ModuleName @ Commit (BuildDate)
            summary: Get version
            tags:
                - common
    /swagger.yml:
        get:
            description: |-
                OpenAPI Specification ver. 2 (fka Swagger)
                Returns our handcrafted and validated `swagger.yml`.
            operationId: GetSwaggerRoute
            produces:
                - text/plain
            responses:
                "200":
                    description: OK
            summary: Get swagger.yml
            tags:
                - common
definitions:
    article:
        properties:
            category_id:
                description: ID of article
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                format: uuid4
                type: string
            content:
                description: Content of the article
                example: This is the content of the article.
                type: string
            created_at:
                description: Timestamp when the article was created
                example: "2023-10-01T12:00:00Z"
                format: date-time
                type: string
            description:
                description: Description of the article
                example: This is the description of the article.
                type: string
            id:
                description: ID of article
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                format: uuid4
                type: string
            image:
                description: Image of the article
                example: https://example.com/article-image.jpg
                type: string
            title:
                description: Title of the article
                example: Article Title
                maxLength: !!float 255
                type: string
            updated_at:
                description: Timestamp when the article was last updated
                example: "2023-10-02T12:00:00Z"
                format: date-time
                type: string
        required:
            - id
            - title
            - content
            - category_id
            - image
        type: object
    category:
        properties:
            created_at:
                description: Timestamp when the category was created
                example: "2023-10-01T12:00:00Z"
                format: date-time
                type: string
            id:
                description: ID of category
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                format: uuid4
                type: string
            title:
                description: Name of the category
                example: Politics
                type: string
            updated_at:
                description: Timestamp when the category was last updated
                example: "2023-10-02T12:00:00Z"
                format: date-time
                type: string
        required:
            - id
            - title
        type: object
    createArticleRequest:
        properties:
            category_id:
                description: ID of category
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                format: uuid4
                type: string
            content:
                description: Content of the article
                example: This is the content of the article.
                type: string
            description:
                description: Description of the article
                example: This is the description of the article.
                type: string
            image:
                description: Image of the article
                example: https://example.com/article-image.jpg
                type: string
            title:
                description: Title of the article
                example: Article Title
                maxLength: !!float 255
                type: string
        required:
            - title
            - content
            - image
        type: object
    createArticleResponse:
        properties:
            message:
                example: Article created successfully.
                type: string
        type: object
    createCategoryRequest:
        properties:
            title:
                description: Name of the category
                example: Politics
                type: string
        required:
            - title
        type: object
    createCategoryResponse:
        properties:
            message:
                example: Category created successfully.
                type: string
        type: object
    createFeaturedSectionRequest:
        properties:
            title:
                description: Title of the featured section
                type: string
        required:
            - title
        type: object
    createFeaturedSectionResponse:
        properties:
            message:
                example: Featured section created successfully.
                type: string
        type: object
    createStreamResponse:
        properties:
            id:
                description: ID of stream
                example: 891d37d3-c74f-493e-aea8-af73efd92016
                format: uuid4
                type: string
            url:
                description: URL of stream
                example: url
                type: string
        required:
            - id
        type: object
    deleteArticleResponse:
        properties:
            message:
                example: Article deleted successfully.
                type: string
        type: object
    deleteCategoryResponse:
        properties:
            message:
                example: Category deleted successfully.
                type: string
        type: object
    deleteFeaturedSectionResponse:
        properties:
            message:
                example: Section deleted successfully.
                type: string
        type: object
    featuredSection:
        properties:
            created_at:
                description: Timestamp when the section was created
                example: "2023-10-01T12:00:00Z"
                format: date-time
                type: string
            id:
                description: ID of section
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                format: uuid4
                type: string
            title:
                description: Title of the featured section
                example: Top Stories
                type: string
            updated_at:
                description: Timestamp when the section was last updated
                example: "2023-10-02T12:00:00Z"
                format: date-time
                type: string
        required:
            - id
            - title
        type: object
    getArticleResponse:
        properties:
            article:
                $ref: '#/definitions/article'
        type: object
    getArticlesResponse:
        items:
            $ref: '#/definitions/article'
        type: array
    getCategoriesResponse:
        items:
            $ref: '#/definitions/category'
        type: array
    getCategoriesWithArticlesResponse:
        items:
            $ref: '#/definitions/getCategoryWithArticlesResponse'
        type: array
    getCategoryResponse:
        properties:
            category:
                $ref: '#/definitions/category'
        type: object
    getCategoryWithArticlesResponse:
        properties:
            articles:
                items:
                    properties:
                        category_id:
                            description: ID of article
                            example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                            format: uuid4
                            type: string
                        content:
                            description: Content of the article
                            example: This is the content of the article.
                            type: string
                        created_at:
                            description: Timestamp when the article was created
                            example: "2023-10-01T12:00:00Z"
                            format: date-time
                            type: string
                        description:
                            description: Description of the article
                            example: This is the description of the article.
                            type: string
                        id:
                            description: ID of article
                            example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                            format: uuid4
                            type: string
                        image:
                            description: Image of the article
                            example: https://example.com/article-image.jpg
                            type: string
                        title:
                            description: Title of the article
                            example: Article Title
                            maxLength: !!float 255
                            type: string
                        updated_at:
                            description: Timestamp when the article was last updated
                            example: "2023-10-02T12:00:00Z"
                            format: date-time
                            type: string
                    required:
                        - id
                        - title
                        - content
                        - category_id
                        - image
                    type: object
                type: array
            category:
                $ref: '#/definitions/category'
        type: object
    getFeaturedSectionResponse:
        properties:
            section:
                $ref: '#/definitions/featuredSection'
        type: object
    getFeaturedSectionWithArticlesResponse:
        properties:
            articles:
                items:
                    properties:
                        category_id:
                            description: ID of article
                            example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                            format: uuid4
                            type: string
                        content:
                            description: Content of the article
                            example: This is the content of the article.
                            type: string
                        created_at:
                            description: Timestamp when the article was created
                            example: "2023-10-01T12:00:00Z"
                            format: date-time
                            type: string
                        description:
                            description: Description of the article
                            example: This is the description of the article.
                            type: string
                        id:
                            description: ID of article
                            example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                            format: uuid4
                            type: string
                        image:
                            description: Image of the article
                            example: https://example.com/article-image.jpg
                            type: string
                        title:
                            description: Title of the article
                            example: Article Title
                            maxLength: !!float 255
                            type: string
                        updated_at:
                            description: Timestamp when the article was last updated
                            example: "2023-10-02T12:00:00Z"
                            format: date-time
                            type: string
                    required:
                        - id
                        - title
                        - content
                        - category_id
                        - image
                    type: object
                type: array
            featured_section:
                $ref: '#/definitions/featuredSection'
        type: object
    getFeaturedSectionsResponse:
        items:
            $ref: '#/definitions/featuredSection'
        type: array
    getFeaturedSectionsWithArticlesResponse:
        items:
            $ref: '#/definitions/getFeaturedSectionWithArticlesResponse'
        type: array
    getUserInfoResponse:
        properties:
            email:
                description: Email address of user, if available
                example: user@example.com
                format: email
                maxLength: !!float 255
                type: string
            id:
                description: ID of user
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                type: string
            name:
                description: Name of user
                example: John Doe
                type: string
        required:
            - id
            - name
            - email
        type: object
    httpValidationErrorDetail:
        properties:
            error:
                description: Error describing field validation failure
                type: string
            in:
                description: Indicates how the invalid field was provided
                type: string
            key:
                description: Key of field failing validation
                type: string
        required:
            - key
            - in
            - error
        type: object
    orderDir:
        enum:
            - asc
            - desc
        type: string
    postLoginPayload:
        properties:
            email:
                description: Email of user to authenticate as
                example: user@example.com
                format: email
                maxLength: !!float 255
                minLength: !!float 1
                type: string
            password:
                description: Password of user to authenticate as
                example: correct horse battery staple
                maxLength: !!float 255
                minLength: !!float 1
                type: string
        required:
            - email
            - password
        type: object
    postLoginResponse:
        properties:
            access_token:
                description: Access token required for accessing protected API endpoints
                example: eyJhdWQiOiJjdXN0b2...
                type: string
            refresh_token:
                description: Refresh token for refreshing the access token once it expires
                example: eyJhdWQiOiJjdXN0b2...
                type: string
        required:
            - access_token
            - refresh_token
        type: object
    postRegisterPayload:
        properties:
            email:
                description: Email to register with
                example: user@example.com
                format: email
                maxLength: !!float 255
                minLength: !!float 1
                type: string
            name:
                description: Name to register with
                example: John Doe
                maxLength: !!float 255
                minLength: !!float 1
                type: string
            password:
                description: Password to register with
                example: correct horse battery staple
                maxLength: !!float 255
                minLength: !!float 1
                type: string
        required:
            - name
            - email
            - password
        type: object
    postUpdatePushTokenPayload:
        properties:
            fingerprint:
                description: uniquely identifies the build of the device.
                example: realme-RMX2001EEA-RMX2001L1:11-RP1A.200720.011-1647528410735:user-release-keys
                maxLength: !!float 500
                type: string
            newToken:
                description: New push token for given provider.
                example: 1c91e550-8167-439c-8021-dee7de2f7e96
                maxLength: !!float 500
                type: string
            oldToken:
                description: Old token that can be deleted if present.
                example: 495179de-b771-48f0-aab2-8d23701b0f02
                maxLength: !!float 500
                type: string
                x-nullable: true
            provider:
                description: Identifier of the provider the token is for (eg. "fcm", "apn"). Currently only "fcm" is supported.
                example: fcm
                maxLength: !!float 500
                type: string
        required:
            - newToken
            - provider
            - fingerprint
        type: object
    publicHttpError:
        properties:
            detail:
                description: More detailed, human-readable, optional explanation of the error
                example: User is lacking permission to access this resource
                type: string
            status:
                description: HTTP status code returned for the error
                example: !!float 403
                format: int64
                maximum: !!float 599
                minimum: !!float 100
                type: integer
                x-go-name: Code
            title:
                description: Short, human-readable description of the error
                example: Forbidden
                type: string
            type:
                description: Type of error returned, should be used for client-side error handling
                example: generic
                type: string
        required:
            - status
            - type
            - title
        type: object
    publicHttpValidationError:
        allOf:
            - $ref: '#/definitions/publicHttpError'
        properties:
            validationErrors:
                description: List of errors received while validating payload against schema
                items:
                    $ref: '#/definitions/httpValidationErrorDetail'
                type: array
        required:
            - validationErrors
        type: object
    streamEvent:
        properties:
            action:
                description: Action performed on stream
                example: publish
                type: string
            app:
                description: App of stream
                example: app
                type: string
            client_id:
                description: Client ID of stream
                example: 891d37d3-c74f-493e-aea8-af73efd92016
                type: string
            ip:
                description: IP address of stream
                example: 89.207.132.170
                type: string
            param:
                description: Param of stream
                example: param
                type: string
            server_id:
                description: Server ID of stream
                example: 891d37d3-c74f-493e-aea8-af73efd92016
                type: string
            stream:
                description: Stream of stream
                example: stream
                type: string
            stream_id:
                description: Stream ID of stream
                example: 891d37d3-c74f-493e-aea8-af73efd92016
                type: string
            stream_url:
                description: Stream URL of stream
                example: stream_url
                type: string
            vhost:
                description: VHost of stream
                example: vhost
                type: string
        required:
            - action
            - client_id
            - ip
            - vhost
            - app
            - stream
            - param
            - server_id
            - stream_id
            - stream_url
        type: object
    streamEventResponse:
        properties:
            code:
                description: Response code
                example: !!float 0
                type: integer
        required:
            - code
        type: object
    updateArticleRequest:
        properties:
            category_id:
                description: ID of category
                example: 82ebdfad-c586-4407-a873-4cc1c33d56fc
                format: uuid4
                type: string
            content:
                description: Content of the article
                example: This is the content of the article.
                type: string
            description:
                description: Description of the article
                example: This is the description of the article.
                type: string
            image:
                description: Image of the article
                example: https://example.com/article-image.jpg
                type: string
            title:
                description: Title of the article
                example: Article Title
                maxLength: !!float 255
                type: string
        required:
            - title
            - content
            - image
        type: object
    updateArticleResponse:
        properties:
            message:
                example: Article updated successfully.
                type: string
        type: object
    updateCategoryRequest:
        properties:
            title:
                description: Name of the category
                example: Politics
                type: string
        required:
            - title
        type: object
    updateCategoryResponse:
        properties:
            message:
                example: Category updated successfully.
                type: string
        type: object
    updateFeaturedSectionRequest:
        properties:
            title:
                description: Title of the featured section
                type: string
        required:
            - title
        type: object
    updateFeaturedSectionResponse:
        properties:
            message:
                example: Featured Section updated successfully.
                type: string
        type: object
responses:
    AuthForbiddenResponse:
        description: PublicHTTPError, type `USER_DEACTIVATED`/`NOT_LOCAL_USER`
        schema:
            $ref: '#/definitions/publicHttpError'
    AuthUnauthorizedResponse:
        description: PublicHTTPError
        schema:
            $ref: '#/definitions/publicHttpError'
    InvalidPasswordResponse:
        description: PublicHTTPValidationError, type `INVALID_PASSWORD`
        schema:
            $ref: '#/definitions/publicHttpValidationError'
    ValidationError:
        description: PublicHTTPValidationError
        schema:
            $ref: '#/definitions/publicHttpValidationError'
securityDefinitions:
    Bearer:
        description: |-
            Access token for application access, **must** include "Bearer " prefix.
            Example: `Bearer b4a94a42-3ea2-4af3-9699-8bcbfee6e6d2`
        in: header
        name: Authorization
        type: apiKey
        x-keyPrefix: 'Bearer '
